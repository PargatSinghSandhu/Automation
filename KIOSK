"C:\Program Files\Google\Chrome\Application\chrome.exe" --kiosk https://laerdal.com/us/products/simulation-training/operate-assess-debrief/lleap/
"C:\Program Files\Google\Chrome\Application\chrome.exe" --kiosk https://example.com

Set-AssignedAccess -AppPath "C:\Program Files\Google\Chrome\Application\chrome.exe" `
  -UserName "memeot" `
  -ShellLauncher `
  -AppArguments "--kiosk https://your-app-url"

Set-AssignedAccess : A parameter cannot be found that matches parameter name 'AppPath'.
At line:1 char:20
+ Set-AssignedAccess -AppPath "C:\Program Files\Google\Chrome\Applicati ...
+                    ~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Set-AssignedAccess], ParameterBindingException
    + FullyQualifiedErrorId : NamedParameterNotFound,Set-AssignedAccess





# 1. Get SID for domain user
$user = New-Object System.Security.Principal.NTAccount("ucdenver.pvt\\NursingIT")
$userSID = $user.Translate([System.Security.Principal.SecurityIdentifier]).Value

# 2. Set namespace and class for Shell Launcher v2
$namespaceName = "root\standardcimv2\embedded"
$className = "WESL_UserSetting"

# 3. Try to get existing Shell Launcher config for this user
$instance = Get-WmiObject -Namespace $namespaceName -Class $className -Filter "UserSID='$userSID'"

if ($instance -eq $null) {
    # 4. Create new instance if none exists
    $instance = ([WMIClass]"\\.\${namespaceName}:${className}").CreateInstance()
    $instance.UserSID = $userSID
}

# 5. Set Chrome as the shell
$instance.Shell = "C:\Program Files\Google\Chrome\Application\chrome.exe"
$instance.ShellArguments = "--kiosk https://laerdal.com/us/products/simulation-training/operate-assess-debrief/lleap/"
$instance.Default = $true

# 6. Save the configuration
$instance.Put()




>> $instance.Put()
Exception calling "Translate" with "1" argument(s): "The trust relationship between this workstation and the primary
domain failed.
"
At line:3 char:1
+ $userSID = $user.Translate([System.Security.Principal.SecurityIdentif ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : SystemException

Get-WmiObject : Invalid class "WESL_UserSetting"
At line:10 char:13
+ $instance = Get-WmiObject -Namespace $namespaceName -Class $className ...
+             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidType: (:) [Get-WmiObject], ManagementException
    + FullyQualifiedErrorId : GetWMIManagementException,Microsoft.PowerShell.Commands.GetWmiObjectCommand

Cannot convert value "\\.\root\standardcimv2\embedded:WESL_UserSetting" to type "System.Management.ManagementClass".
Error: "Not found "
At line:14 char:5
+     $instance = ([WMIClass]"\\.\${namespaceName}:${className}").Creat ...
+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [], RuntimeException
    + FullyQualifiedErrorId : InvalidCastToWMIClass

The property 'UserSID' cannot be found on this object. Verify that the property exists and can be set.
At line:15 char:5
+     $instance.UserSID = $userSID
+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound

The property 'Shell' cannot be found on this object. Verify that the property exists and can be set.
At line:19 char:1
+ $instance.Shell = "C:\Program Files\Google\Chrome\Application\chrome. ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound

The property 'ShellArguments' cannot be found on this object. Verify that the property exists and can be set.
At line:20 char:1
+ $instance.ShellArguments = "--kiosk https://laerdal.com/us/products/s ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound

The property 'Default' cannot be found on this object. Verify that the property exists and can be set.
At line:21 char:1
+ $instance.Default = $true
+ ~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound

You cannot call a method on a null-valued expression.
At line:24 char:1
+ $instance.Put()
+ ~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : InvokeMethodOnNull

PS C:\WINDOWS\system32>
